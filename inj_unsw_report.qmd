---
title: "Injustice Attention Report"
author: "Tom Beesley"
format: 
  pdf:
    highlight-style: zenburn
editor_options: 
  chunk_output_type: console
execute: 
  warning: false
---

Most recent analysis run on: `r date()`

Using eyetools version: `r citation("eyetools")`

## Setup and loading in the data

The data I'm loading in here is the fixation data for all participants. This is after having processed the raw data into fixations, which is handled in another script (stitch_data.R)

```{r}
library(tidyverse)
library(eyetools)
library(effectsize)
library(afex)

rm(list = ls())

load("inj_unsw_data.RData")

eg_fix <- 
  eg_fix %>%
  rename(pID = pNum)

eg_stim <- 
  eg_stim %>%
  rename(pID = pNum)
```

## Setting up AOIs 

I set up three AOIs, for left, fixation, and right. Left and right AOIs are now calculated from the original matlab code. 

```{r}
# Set AOIs
AOI_stims <- eyetools::create_AOI_df(3)

AOI_stims[1,] <- c(510, 540, 700, 500) # X, Y, W, H - left
AOI_stims[2,] <- c(1410, 540, 700, 500) # X, Y, W, H - right
AOI_stims[3,] <- c(960, 540, 150, 150) # X, Y, W, H - fixation

AOI_stims_names <- c("left", "right", "centre")
```

## Number of fixations

Here's what a typical trial looks like with 25 fixations (using `eyetools::spatial_plot()`):
```{r}
data_trial <- 
  eg_stim %>% 
  filter(pNum == 001, 
         trial == 3)

eyetools::plot_spatial(fix_data = eg_stim,
                       pID_values = 001,
                       trial_values = 3,
                       AOIs = AOI_stims)

```

You can see from the index numbers that there is back and forth processing between the two stimuli. We can use `eyetools::AOI_seq()` to look at how the eye movements entered the different AOIs (here, just for the first 5 trials for this participant):

```{r}

data_p1 <- 
  eg_stim %>% 
  filter(pNum == 001)

eyetools::AOI_seq(data = data_p1, 
                  AOIs = AOI_stims, 
                  AOI_names = AOI_stims_names) %>%
  head(5)

```

Here's the distribution of the number of fixations on a trial for all the data (for all participants):

```{r}
eg_stim %>% 
  group_by(pNum, trial) %>% 
  summarise(nFix = n()) %>% 
  ggplot() +
  geom_histogram(aes(nFix), bins = 30, fill = "dark blue") + 
  theme_classic(base_size = 12) +
  labs(title = "Distribution of number of fixations per trial",
       x = "Number of fixations within a trial",
       y = "")
```

Do the participants vary much in the mean number of fixations per trial? There are a couple of outliers in terms of number of fixations. 

```{r}

eg_stim %>% 
  group_by(pNum, trial) %>% 
  summarise(n_fix = n()) %>% 
  group_by(pNum) %>% 
  summarise(mean_fix = mean(n_fix)) %>% 
  ggplot(aes(mean_fix, x = "")) +
  geom_violin() +
  geom_dotplot(binaxis = "y", stackdir = "center")

```

## Looking at time in AOIs for the different trial types / stimulus valence

Following that exploration, we can take a look at the more important stuff:

The following code takes the pair types that you've defined and matches them up with the trial data for each participant. Thus we end up with a dataframe that contains the time spent in each area of interest, and what was presented on the screen. Then depending on the location of the target (which I take to be the first stimulus named in each pair) we take the data from AOI_1 and AOI_3. This means that we then have columns that reflect time on "Stim 1" (the first stimulus in each pair) and "Stim 2" (the second stimulus in each pair), irrespective of whether they are on the left or right each trial. 

```{r}
stim_codes <- 
  read_csv("stim_details.csv") %>% 
  rename(trial_ID = pair_num)
  

id_data <- 
  id_data %>% 
  left_join(stim_codes, by = "trial_ID")

eg_list <- split.data.frame(eg_stim, eg_stim[,1])

# get AOI time result for all participants
AOI_list <- lapply(eg_list, AOI_time, AOIs = AOI_stims)
AOI_df <- do.call(rbind.data.frame, AOI_list)

eg_data_combined <- cbind(id_data, AOI_df) # bind together the data

eg_data_combined <- 
  eg_data_combined %>% 
  mutate(across(AOI_1:AOI_3, ~as.numeric(.x)))

# pair type
# 1 = UNJ-NEG
# 2 = UNJ-NEUT
# 3 = NEG-NEUT

# target_loc
# 1 = LHS
# 2 = RHS

eg_data_full <- 
  eg_data_combined %>% 
  mutate(pair_type = case_match(pair_type,
                                1 ~ "unj_neg",
                                2 ~ "unj_neut",
                                3 ~ "neg_neut")) %>% 
  mutate(stim_1_eg = case_when(target_loc == 1 ~ AOI_1,
                               target_loc == 2 ~ AOI_2),
         stim_2_eg = case_when(target_loc == 1 ~ AOI_2,
                               target_loc == 2 ~ AOI_1))
```

# Summarising the data for visualisation

Taking this final combined dataframe, we can summarise how much time each person spends on each stimulus in the pair, as a function of the trial type. This is plotted below:

```{r}
# summarise the data for each participant, to get
# the critical 6 values (3 pairs x 2 stimuli)
eg_means_summary <- 
  eg_data_full %>% 
  group_by(pNum, pair_type) %>% 
  summarise(meanS1 = mean(stim_1_eg, na.rm = TRUE),
            meanS2 = mean(stim_2_eg, na.rm = TRUE))

# rather than have two columns for the two stimuli
# we should pivot the data and make stimulus a variable
eg_means_summary <- 
eg_means_summary %>% 
  pivot_longer(cols = c("meanS1", "meanS2"), 
               names_prefix = "mean", 
               names_to = "stimulus", 
               values_to = "EG_time")

# calculate grand means and SE for the sample (for plotting)
eg_fig <- 
  eg_means_summary %>% 
  group_by(pair_type, stimulus) %>% 
  summarise(meanEG = mean(EG_time),
            SE_EG = sd(EG_time)/sqrt(n()))

# plot the data
eg_fig %>% 
  ggplot(aes(x = pair_type, y = meanEG, 
             fill = stimulus, 
             ymin = meanEG - SE_EG,
             ymax = meanEG + SE_EG)) +
  geom_col(color= "black", 
           position=position_dodge()) +
  geom_errorbar(position = position_dodge(.9), 
                width = .3) +
  coord_cartesian(ylim = c(3000, 5000)) +
  theme_classic(base_size = 12) +
  labs(y = "Mean dwell time on AOIs",
       x = "Stimulus pair",
       fill = "Stimulus",
       title = "EG on each of two stimuli across different trial types")
```

We'll run a t-test to see if the difference between unjust and negative stimuli is a real effect - yes it is! And with a medium effect size. 

```{r}
# filter to just the UNJ-NEG data
t_data_unj_neg <- 
  eg_means_summary %>% 
  filter(pair_type == "unj_neg")

# paired t-test
t.test(t_data_unj_neg$EG_time[t_data_unj_neg$stimulus == "S1"], 
       t_data_unj_neg$EG_time[t_data_unj_neg$stimulus == "S2"], 
       paired = TRUE)

# relevant effect size
effectsize::cohens_d(t_data_unj_neg$EG_time[t_data_unj_neg$stimulus == "S1"],
                     t_data_unj_neg$EG_time[t_data_unj_neg$stimulus == "S2"], 
                     paired = TRUE)



```

# Proportion of trials with a first fixation on target/non-target

```{r}

# get AOI time result for all participants
AOI_seq_list <- lapply(eg_list, AOI_seq, AOIs = AOI_stims, AOI_names = AOI_stims_names)
AOI_seq_df <- do.call(rbind.data.frame, AOI_seq_list)
eg_seq_data_combined <- cbind(id_data, AOI_seq_df) # bind together the data

# arranging the sequence of AOI entries
eg_seq_data_combined <- 
  eg_seq_data_combined %>% 
  separate_longer_delim(AOI_entry_seq, delim = ";") %>% 
  group_by(pNum, trial) %>% 
  mutate(entry = 1:n())

# for each trial assessing whether the first was on fixation, and which stimulus was viewed first
eg_early_summary <- 
  eg_seq_data_combined %>% 
  group_by(pNum, trial) %>% 
  mutate(fixFirst = AOI_entry_seq[1],
         firstStimEntry = case_when(!fixFirst == "centre" ~ AOI_entry_seq[1],
                                    fixFirst == "centre" ~ AOI_entry_seq[2])) %>% 
  slice(1) %>% 
  select(-AOI_entry_seq, -entry) %>% 
  ungroup()
  
# pair type
# 1 = UNJ-NEG
# 2 = UNJ-NEUT
# 3 = NEG-NEUT

# target_loc
# 1 = LHS
# 2 = RHS

eg_early_summary <- 
  eg_early_summary %>% 
  mutate(pair_type = case_match(pair_type,
                                1 ~ "unj_neg",
                                2 ~ "unj_neut",
                                3 ~ "neg_neut"),
         fixFirst = case_when(fixFirst == "centre" ~ 1,
                              .default = 0),
         firstStimEntry = case_when(target_loc == 1 & firstStimEntry == "left" ~ "target",
                                    target_loc == 2 & firstStimEntry == "right" ~ "target",
                                    target_loc == 1 & firstStimEntry == "right" ~ "alt",
                                    target_loc == 2 & firstStimEntry == "left" ~ "alt"))

count(eg_early_summary, firstStimEntry)
mean(eg_early_summary$fixFirst)

pair_summary_first_EG <- 
  eg_early_summary %>% 
  filter(fixFirst == 1) %>% 
  group_by(pNum, pair_type) %>% 
  summarise(prop_target_first = mean(firstStimEntry=="target", na.rm = TRUE))


pair_summary_first_EG %>% 
  group_by(pair_type) %>% 
  summarise(prop_targ = mean(prop_target_first),
            se = sd(prop_target_first)/sqrt(n())) %>% 
  ggplot(aes(x = pair_type, y = prop_targ, 
             ymin = prop_targ - se,
             ymax = prop_targ + se)) +
  geom_col(color= "black", 
           position=position_dodge()) +
  geom_errorbar(position = position_dodge(.9), 
                width = .3) +
  coord_cartesian(ylim = c(0.4, 0.6)) +
  theme_classic(base_size = 12) +
  labs(y = "Prop. of first fixation on target stimulus",
       x = "Stimulus pair",
       title = "Proportion of trials with a fixation on the target stimulus")


aov_car(data = pair_summary_first_EG,
        formula = prop_target_first ~ Error(pNum/pair_type))

```

In this analysis I looked at the order in which participants landed in the three different areas of interest - left stimulus, right stimulus, and central fixation. I then took just the initial entries on each trial, noting when participants looked at the centre first (i.e., were following instructions to fixate on the fixation cross). On average, participants only did this on 72% of trials, and I analysed only data from these trials (the pattern is the same if you include trials where they didn't fixate first). Then I noted which stimulus they looked at first. From this we can calculate the proportion of trials on which they fixated the target or the alternative stimulus. It is fairly close to 50/50 in all three trial types, but there is some suggestion of a difference on the UNJ v NEG trial type. Here they seem to go to the "alternative" (non-target) stimulus on about 55% of trials. The ANOVA reveals an effect of trial type. 

